
data MyType a =
  | Foo
  | Bar ℤ
  | Baz Bool a

data Sum a b =
  | Inl a
  | Inr b

# data MyType a =
#   | Foo : MyType a
#   | Bar : ℤ -> MyType a
#   | Baz : Bool -> a -> MyType a

# data Sum a b =
#   | inl : a -> Sum a b
#   | inr : b -> Sum a b

# data MyType = Λa.
#   | Foo
#   | Bar ℤ
#   | Baz Bool ℤ

# A datatype with no data constructors is allowed. It is uninhabited.
data Empty =

# val f : Empty -> a
# val f : Bool -> a
# let f = λx. destruct x as end

let iszero = λn. if n = 0 then ⊤ else ⊥

val f : MyType Bool -> Bool
let f = λx : MyType a. # this should probably produce a warning
  destruct x as
  | Foo -> ⊥
  | Bar n -> iszero n
  | Baz y z -> z

〚 f (Baz ⊥ ⊤) 〛
〚 f (Bar 1) 〛
〚 f Foo 〛

# val a : Bool
# let a = ⊥

# val b : Unit
# let b = tt

# let x = Baz a 123

# 〚 x 〛

# 〚
#   destruct x as
#   | Foo -> tt
#   | Bar _ -> tt
#   | Baz x y -> tt
#   | _ -> tt
#   end
# 〛

# let y = (x, (0, ⊤))

# 〚
#   destruct y as
#   | (x, (z, ⊥)) -> ⊤
#   | (_, (_, b)) -> b
#   # | (0, _) -> ⊥
#   end
# 〛
