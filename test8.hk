
-- data Option a =
--   | None
--   | Some a

-- 〚 Some 〛

-- data Test a =
--   | Test (Ref a)

-- pure f : TestClass a => a -> a
-- def f = \x. x

class Eq a where
  | eq : a -> a -> Bool

class Eq a => TestClass a where
  | bakow : a -> Int
  | muh : a -> Bool

pure f : TestClass a => a -> Int
def f = bakow

-- instance TestClass Int where
--   | muh = λx. ⊥
--   | bakow = λx. x
